@using PrintCompany.ViewModels
@model PrintCompany.ViewModels.OrderViewModel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .select2 {
        width: 100% !important;
    }

    .nav-tabs > li > a {
        background-color: white;
    }
</style>

<div class="row">
    <div class="tabs-container">
        <ul class="nav nav-tabs">
            <li class="active"><a aria-expanded="true" href="#home" data-toggle="tab">Order</a></li>
            <li class=""><a aria-expanded="false" href="#profile" data-toggle="tab">Attachments</a></li>
        </ul>

        <div class="tab-content">
            <div class="tab-pane active" id="home">
                <div class="panel panel-default">
                    <div class="panel-heading clearfix">
                        <h3 class="panel-title">Order Details</h3>
                    </div>
                    <div class="panel-body" style="padding: 15px">
                        <form action="/Orders/Edit" method="post" enctype="multipart/form-data">
                            <input type="hidden" name="Id" value="@Model.Id" />
                            @Html.AntiForgeryToken()
                            <div class="row">
                                <div class="form-group col-xs-2">
                                    <label for="Name">Order Number</label>
                                    <input type="text" class="form-control" id="OrderNumber" name="OrderNumber" value="@Model.Id" disabled>
                                </div>
                                <div class="form-group col-xs-4">
                                    <label for="CustomerId">Customer</label>
                                    <div>
                                        @Html.DropDownListFor(n => n.CustomerId, Enumerable.Empty<SelectListItem>(), new { @id = "txtOptionId", @style = "width:500px;" })
                                        @*@Html.ValidationMessageFor(n => n.CustomerId)*@
                                        @*<select id="CustomerSelect" class="Customer select2 form-control select2-hidden-accessible" style="width:500px;" name="CustomerId">
                                </select>*@
                                    </div>
                                </div>
                                <div class="form-group col-xs-2">
                                    <label for="OrderDate">Order Date</label>
                                    <div id="OrderDate" class="input-group date date-popup">
                                        <input type="text" class="form-control" name="OrderDate" value="@Model.OrderDate.ToString("dd/MM/yyyy")">
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    </div>
                                </div>
                                <div class="form-group col-xs-2">
                                    <label for="DueDate">Due Date</label>
                                    <div id="DueDate" class="input-group date date-popup">
                                        @*<input type="text" class="form-control" name="DueDate" value="@(Model.DueDate.HasValue ? Model.DueDate.Value.ToString("dd/MM/yyyy") : "")">*@
                                        <input type="text" class="form-control" name="DueDate" value="@string.Format("{0:dd/MM/yyyy}", Model.DueDate)">
                                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <a href="/Orders" class="btn btn-primary" style="margin:5px 5px 5px 15px; width:75px;">Back</a>
                                <input type="submit" class="btn btn-success" style="margin:5px; width:75px;" value="Save" />
                            </div>
                        </form>
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-heading clearfix">
                        <h3 class="panel-title">Order Items</h3>
                        <button type="button" class="btn btn-link" style="padding: 0; margin-left: 15px;" data-toggle="modal" data-target="#modal-1" data-order-id="@Model.Id">Add Item</button>
                    </div>
                    @await Html.PartialAsync("_OrderLinesByOrderId", Model.orderLineViewModels)
                </div>            
            </div>

            <div class="tab-pane" id="profile">
                <div class="panel-body">
                    <form action="/FileUploads/Upload" method="post" enctype="multipart/form-data">
                        <input type="hidden" name="Id" value="@Model.Id" />
                        @Html.AntiForgeryToken()
                        <div id="uploadSection">
                            <label>Select files for upload</label>
                            <input type="file" id="files" name="files" multiple />
                        </div>
                        <div>
                            <input type="submit" id="thisbutton" value="button" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>



@await Html.PartialAsync("_PartialModalOrderLine", new OrderLineViewModel { OrderId = Model.Id })



@*<div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-body">
                    <form id="dropzone-example" class="dropzone" action="/Orders/Edit" enctype="multipart/form-data">
                        <input type="hidden" name="Id" value="@Model.Id" />
                        @Html.AntiForgeryToken()
                        <div class="dropzone-previews"></div>
                    </form>
                </div>
            </div>
        </div>
    </div>*@



@section Scripts
    {
    <script>
        $(document).ready(function () {
            $('.date-popup').datepicker({
                autoclose: true,
                todayBtn: true,
                format: "dd/mm/yyyy",
                enableOnReadonly: false,
                keyboardNavigation: false,
                forceParse: false,
                todayHighlight: true
            });

            $("#txtOptionId").select2({
                ajax: {
                    url: "/Customers/GetCustomerList",
                    dataTYpe: "json",
                    data: function (params) {
                        return {
                            searchTerm: params.term
                        };
                    },
                    processResults: function (data, params) {
                        return {
                            results: data
                        };
                    }
                }
            });

            // Fetch the preselected item, and add to the control
            var customerSelect = $('#txtOptionId');
            $.ajax({
                type: 'GET',
                url: '/Customers/GetCustomer/' + '@Model.CustomerId'
            }).then(function (data) {
                // create the option and append to Select2
                var option = new Option(data.text, data.id, true, true);
                customerSelect.append(option).trigger('change');

                // manually trigger the `select2:select` event
                customerSelect.trigger({
                    type: 'select2:select',
                    params: {
                        data: data
                    }
                });
            });

        //$('#modal-1').on('show.bs.modal', function (e) {
        //    var btn = $(e.relatedTarget);
        //    var orderid = btn.data('order-id');

        //    //alert(orderid);

        //    //$('.modal-body').load('/OrderLines/Create/' + orderid)
        //})
        });

        $("#ItemTypeId").select2({
            placeholder: "Type",
            ajax: {
                url: "/OrderLines/GetItemList",
                dataTYpe: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: data
                    };
                }
            }
        });

        $("#ItemColorId").select2({
            placeholder: "Color",
            ajax: {
                url: "/OrderLines/GetColorList",
                dataTYpe: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: data
                    };
                }
            }
        });

        $("#ItemSizeId").select2({
            placeholder: "Size",
            ajax: {
                url: "/OrderLines/GetSizeList",
                dataTYpe: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: data
                    };
                }
            }
        });

        $('.dataTables-orderLines').DataTable({
            dom: '<"html5buttons" B>ftlp',
            buttons: [
                //{
                //    extend: 'copyHtml5',
                //    exportOptions: {
                //        columns: [0, ':visible']
                //    }
                //},
                {
                    extend: 'excelHtml5',
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                {
                    extend: 'pdfHtml5',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5, 6, 7, 8 ]
                    }
                },
                'colvis'
            ],
            columnDefs: [
                { width: '8%', targets: 0 },
                { width: '10%', targets: 1 },
                { width: '10%', targets: 2 },
                { width: '7%', targets: 3 },
                { width: '9%', targets: 4 },
                { width: '9%', targets: 5 },
                { width: '9%', targets: 6 },
                { width: '9%', targets: 7 },
                { width: '9%', targets: 8 },
            ]
        });



    </script>
}

